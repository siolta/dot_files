## Profile startup (if needed)
# zmodload zsh/zprof
## ZSH
# User defined options
# Type 'dir' instead of cd 'dir'
setopt AUTO_CD
# Only save one instance of each command in history
setopt HIST_IGNORE_DUPS
setopt HIST_IGNORE_ALL_DUPS
setopt HIST_REDUCE_BLANKS
setopt HIST_IGNORE_SPACE
# Reevaluate the prompt string each time it's displaying a prompt
setopt prompt_subst
zstyle ':completion:*' menu select 
autoload bashcompinit && bashcompinit
# Setup completions, only check for cache refresh once a day
autoload -Uz compinit
for dump in ~/.zcompdump(N.mh+24); do
  compinit
done

compinit -C

source <(kubectl completion zsh)
complete -C '/opt/homebrew/bin/aws_completer' aws

source $(brew --prefix)/share/zsh-autosuggestions/zsh-autosuggestions.zsh
bindkey '^ ' autosuggest-execute
bindkey '^e' autosuggest-accept
bindkey '^w' vi-forward-word

## Initialize starship
eval "$(starship init zsh)"
export STARSHIP_CONFIG=~/.config/starship/starship.toml

# You may need to manually set your language environment
export LANG=en_US.UTF-8

export EDITOR=/opt/homebrew/bin/nvim

alias cat=bat
alias la=tree

## Git
g() { 
    if [[ $# -gt 0 ]]; then
        git "$@";
    else
        git status;
    fi
}

alias gc="git commit -m"
alias gca="git commit -am"
alias gp="git push"
alias gpu="git pull origin"
alias gst="git status"
# V theme this different after setting up starship V #
alias glog="git log --graph --topo-order --pretty='%w(100,0,6)%C(yellow)%h%C(bold)%C(black)%d %C(cyan)%ar %C(green)%an%n%C(bold)%C(white)%s %N' --abbrev-commit"
alias gdiff="git diff"
alias gs="git switch"
alias gsc="git switch -c"
alias gb='git branch'
alias gba='git branch -a'
alias gadd='git add'
alias ga='git add -p'
alias gre='git reset'
alias git-mega-update='for dir in $(ls); do cd $dir && git status; if [ $? -eq 0 ]; then git pull && cd ..; else cd ..; fi; done'
alias git-remove-untracked='git fetch --prune && git branch -r | awk "{print \$1}" | egrep -v -f /dev/fd/0 <(git branch -vv | grep origin) | awk "{print \$1}" | xargs git branch -d'
alias git-clean="git fetch -p ; git branch -r | awk '{print $1}' | egrep -v -f /dev/fd/0 <(git branch -vv | grep origin) | awk '{print $1}' | xargs git branch -d"

## Docker
alias dco="docker compose"
alias dps="docker ps"
alias dpa="docker ps -a"
alias dl="docker ps -l -q"
alias dx="docker exec -it"

## Go
export GOPATH=$HOME/go
export PATH=$PATH:$HOME/go/bin

## K8s
export KUBECONFIG=~/.kube/config-blackbramble:~/.kube/config
# k() {
#     if [[ $# -gt 0 ]]; then
#         kubectl "$@";
#     else
#         kubectl get po -A;
#     fi
# }

knuke() {
    kubectl delete "$(kubectl api-resources -n $1 --namespaced=true --verbs=delete -o name | tr "\n" "," | sed -e 's/,$//')" --all -n $1
}

# Enable kubecolor
alias kubectl="kubecolor"

alias k="kubectl"
alias ka="kubectl apply -f"
alias kg="kubectl get"
alias kd="kubectl describe"
alias kdel="kubectl delete"
alias kl="kubectl logs -f"
alias kgpo="kubectl get pod"
alias kgd="kubectl get deployments"
alias kc="kubectx"
alias kns="kubens"
alias kcns='kubectl config set-context --current --namespace'
alias ke="kubectl exec -it"

## VIM
alias v="$(which nvim)"

## Misc Aliases
alias speed-test='curl -o /dev/null http://speedtest.wdc01.softlayer.com/downloads/test10.zip'
alias is="dig +short txt istheinternetonfire.com | sed -e 's/\\; / /' -e 's/\"//g' -e 's/  / /g' | cowsay -f moose"
alias weather='curl wttr.in'

## Eza
export EZA_CONFIG_DIR=$XDG_CONFIG_HOME/eza
alias l="eza -l --icons --git -a"
alias lt="eza --tree --level=2 --long --icons --git"
alias ltree="eza --tree --level=2  --icons --git"

## Navigation
cx() { cd "$@" && l; }
fcd() { cd "$(find . -maxdepth 5 -type d -not \( -name Library -prune \) -not \( -name Music -prune \) -not \( -name Pictures -prune \) -not \( -name Movies -prune \) -not -path '*/.*' | fzf)" && l; }
f() { echo "$(find . -type f -not -path '*/.*' | fzf)" | pbcopy }
fv() { nvim "$(find . -maxdepth 5 -type f -not -path '*/.*' | fzf)" }
ff() { aerospace list-windows --all | fzf --bind 'enter:execute(bash -c "aerospace focus --window-id {1}")+abort' }

## FZF
source <(fzf --zsh)
export FZF_DEFAULT_OPTS='--height 40% --layout=reverse --info=inline --border'
# Setup FZF to only search current dir with ^T
# https://github.com/junegunn/fzf/issues/980#issuecomment-733642870
export FZF_DEFAULT_COMMAND="find . -maxdepth 5 -type d -not \( -name Library -prune \) -not \( -name Music -prune \) -not \( -name Pictures -prune \) -not \( -name Movies -prune \) | sed 's/^..//'"
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"

## Workplace Specific Settings
[[ ! -f ~/.zshrc-workplace ]] || source ~/.zshrc-workplace
## Profile startup if needed
# zprof
