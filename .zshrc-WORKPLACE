## Workplace Specific configurations

# Aliases and Functions for Git
g() { 
    if [[ $# -gt 0 ]]; then
        git "$@";
    else
        git status;
    fi
}

alias git-clean="git fetch -p ; git branch -r | awk '{print $1}' | egrep -v -f /dev/fd/0 <(git branch -vv | grep origin) | awk '{print $1}' | xargs git branch -d"

# Aliases and Functions for AWS
function decode-authorization-failure-message {
    if [ $# -ne 1 ] || [ "$1" = -h ] || [ "$1" = --help ]; then
        cat <<'EOT'
Usage: decode-authorization-failure-message <message>
Use this when Amazon gives you an "Encoded authorization failure message" and
you need to turn it into something readable.
EOT
        return 1
    fi

    aws sts decode-authorization-message --encoded-message "$1" |
        jq '.["DecodedMessage"]' |
        sed 's/\\"/"/g' |
        sed 's/^"//' |
        sed 's/"$//' |
        jq
}

# Kubectl configs
export KUBECONFIG=$KUBECONFIG:~/.kube/config-hs:~/.kube/config-minikube

# Kubernetes aliases
alias calicoctl="kubectl exec -i -n kube-system calicoctl -- /calicoctl"

k() {
    if [[ $# -gt 0 ]]; then
        kubectl "$@";
    else
        kubectl get po -A;
    fi
}

knuke() {
    kubectl delete "$(kubectl api-resources -n $1 --namespaced=true --verbs=delete -o name | tr "\n" "," | sed -e 's/,$//')" --all -n $1
}

kontext() {
    if [[ $# -gt 0 ]]; then
        kubectl config use-context "$@";
    else
        kubectl config get-contexts -o name;
    fi
}

# Setup FZF to only search current dir with ^T
> # https://github.com/junegunn/fzf/issues/980#issuecomment-733642870
> export FZF_DEFAULT_COMMAND="find . -maxdepth 4 | sed 's/^..//'"
> export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
